import asyncio
from aiogram import Bot, Dispatcher
from aiogram import types
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from config import API_TOKEN
from bot.handlers import get_routers
from bot.helpers import BotCommands


class BotApp:
    def __init__(self, token: str):
        self.token = token
        self.bot = Bot(token=token, default=DefaultBotProperties(
            parse_mode=ParseMode.HTML
        ))
        self.dp = Dispatcher()
        self.dp.include_routers(*get_routers())

    async def setup_bot_commands(self, bot_commands):
        bot_commands = [
            types.BotCommand(command=BotCommands.StartCommand.value,
                             description="–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º üöÄ"),
            types.BotCommand(command=BotCommands.SetProfileCommand.value,
                             description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å üë§"),
            types.BotCommand(command=BotCommands.HelpCommand.value,
                             description="–£–∑–Ω–∞—Ç—å –æ –±–æ—Ç–µ ‚ùì")
        ]
        await self.bot.set_my_commands(bot_commands)

    async def start_polling(self):
        await self.dp.start_polling(self.bot,
                                    allowed_updates=self.dp.resolve_used_update_types())

    async def run(self):
        await self.setup_bot_commands()
        await self.start_polling()


# Main entry point
if __name__ == '__main__':
    app = BotApp(API_TOKEN)
    asyncio.run(app.run())
